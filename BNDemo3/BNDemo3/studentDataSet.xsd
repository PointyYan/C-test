<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="studentDataSet" targetNamespace="http://tempuri.org/studentDataSet.xsd" xmlns:mstns="http://tempuri.org/studentDataSet.xsd" xmlns="http://tempuri.org/studentDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="studentConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="studentConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BNDemo3.Properties.Settings.GlobalReference.Default.studentConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="classTableAdapter" GeneratorDataComponentClassName="classTableAdapter" Name="class" UserDataComponentName="classTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="studentConnectionString (Settings)" DbObjectName="student.dbo.class" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[class] WHERE (([classid] = @Original_classid) AND ([classname] = @Original_classname))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_classname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="classname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[class] ([classid], [classname]) VALUES (@classid, @classname);
SELECT classid, classname FROM class WHERE (classid = @classid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@classname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="classname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT classid, classname FROM dbo.class</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[class] SET [classid] = @classid, [classname] = @classname WHERE (([classid] = @Original_classid) AND ([classname] = @Original_classname));
SELECT classid, classname FROM class WHERE (classid = @classid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@classname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="classname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_classname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="classname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="classid" DataSetColumn="classid" />
              <Mapping SourceColumn="classname" DataSetColumn="classname" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentinfoTableAdapter" GeneratorDataComponentClassName="studentinfoTableAdapter" Name="studentinfo" UserDataComponentName="studentinfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="studentConnectionString (Settings)" DbObjectName="student.dbo.studentinfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[studentinfo] WHERE (([stuid] = @Original_stuid) AND ([sname] = @Original_sname) AND ((@IsNull_classid = 1 AND [classid] IS NULL) OR ([classid] = @Original_classid)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_stuid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="stuid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_classid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[studentinfo] ([stuid], [sname], [classid]) VALUES (@stuid, @sname, @classid);
SELECT stuid, sname, classid FROM studentinfo WHERE (stuid = @stuid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@stuid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="stuid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT stuid, sname, classid FROM dbo.studentinfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[studentinfo] SET [stuid] = @stuid, [sname] = @sname, [classid] = @classid WHERE (([stuid] = @Original_stuid) AND ([sname] = @Original_sname) AND ((@IsNull_classid = 1 AND [classid] IS NULL) OR ([classid] = @Original_classid)));
SELECT stuid, sname, classid FROM studentinfo WHERE (stuid = @stuid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@stuid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="stuid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_stuid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="stuid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_classid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_classid" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="classid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="stuid" DataSetColumn="stuid" />
              <Mapping SourceColumn="sname" DataSetColumn="sname" />
              <Mapping SourceColumn="classid" DataSetColumn="classid" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="studentDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="studentDataSet" msprop:Generator_UserDSName="studentDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="class" msprop:Generator_TableClassName="classDataTable" msprop:Generator_TableVarName="tableclass" msprop:Generator_TablePropName="_class" msprop:Generator_RowDeletingName="classRowDeleting" msprop:Generator_RowChangingName="classRowChanging" msprop:Generator_RowEvHandlerName="classRowChangeEventHandler" msprop:Generator_RowDeletedName="classRowDeleted" msprop:Generator_UserTableName="class" msprop:Generator_RowChangedName="classRowChanged" msprop:Generator_RowEvArgName="classRowChangeEvent" msprop:Generator_RowClassName="classRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="classid" msprop:Generator_ColumnVarNameInTable="columnclassid" msprop:Generator_ColumnPropNameInRow="classid" msprop:Generator_ColumnPropNameInTable="classidColumn" msprop:Generator_UserColumnName="classid">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="classname" msprop:Generator_ColumnVarNameInTable="columnclassname" msprop:Generator_ColumnPropNameInRow="classname" msprop:Generator_ColumnPropNameInTable="classnameColumn" msprop:Generator_UserColumnName="classname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="studentinfo" msprop:Generator_TableClassName="studentinfoDataTable" msprop:Generator_TableVarName="tablestudentinfo" msprop:Generator_TablePropName="studentinfo" msprop:Generator_RowDeletingName="studentinfoRowDeleting" msprop:Generator_RowChangingName="studentinfoRowChanging" msprop:Generator_RowEvHandlerName="studentinfoRowChangeEventHandler" msprop:Generator_RowDeletedName="studentinfoRowDeleted" msprop:Generator_UserTableName="studentinfo" msprop:Generator_RowChangedName="studentinfoRowChanged" msprop:Generator_RowEvArgName="studentinfoRowChangeEvent" msprop:Generator_RowClassName="studentinfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="stuid" msprop:Generator_ColumnVarNameInTable="columnstuid" msprop:Generator_ColumnPropNameInRow="stuid" msprop:Generator_ColumnPropNameInTable="stuidColumn" msprop:Generator_UserColumnName="stuid">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sname" msprop:Generator_ColumnVarNameInTable="columnsname" msprop:Generator_ColumnPropNameInRow="sname" msprop:Generator_ColumnPropNameInTable="snameColumn" msprop:Generator_UserColumnName="sname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="classid" msprop:Generator_ColumnVarNameInTable="columnclassid" msprop:Generator_ColumnPropNameInRow="classid" msprop:Generator_ColumnPropNameInTable="classidColumn" msprop:Generator_UserColumnName="classid" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:class" />
      <xs:field xpath="mstns:classid" />
    </xs:unique>
    <xs:unique name="studentinfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:studentinfo" />
      <xs:field xpath="mstns:stuid" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_classid" msdata:parent="class" msdata:child="studentinfo" msdata:parentkey="classid" msdata:childkey="classid" msprop:Generator_UserChildTable="studentinfo" msprop:Generator_ChildPropName="GetstudentinfoRows" msprop:Generator_UserRelationName="fk_classid" msprop:Generator_ParentPropName="classRow" msprop:Generator_RelationVarName="relationfk_classid" msprop:Generator_UserParentTable="class" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>